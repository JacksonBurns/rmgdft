#
#  Make.xk-gnu - Compiles the hybrid real-space code for CRAY XK# system with MPI
#  The job submission script should also include the following lines.
#
# export MPICH_MAX_THREAD_SAFETY=serialized
# export OMP_NUM_THREADS=16
# export OMP_WAIT_POLICY=passive
#
#


# Modules(directories) that contain the necessary source files
#GLOBAL_MODULES are defined in the top level Makefile
LOCAL_MODULES = Common Input Spin Spin/XC 
MODULES = $(GLOBAL_MODULES) $(LOCAL_MODULES)

CFILES := $(foreach MODULE, $(MODULES), $(wildcard $(MODULE)/*.c))
FFILES := $(foreach MODULE, $(MODULES), $(wildcard $(MODULE)/*.f))
HFILES := $(wildcard Headers/*.h)
H_EXCLUDES = Headers/arch.h Headers/grid.h Headers/svnrev.h
HFILES := $(filter-out $(H_EXCLUDES),$(HFILES))


#LOBJECTS = /opt/gcc/4.6.2/snos/lib64/libgfortran.a /opt/gcc/4.6.2/snos/lib64/libquadmath.a
#LOBJECTS = /ccs/home/elbriggs/extralibs/libscalapack.a /ccs/home/elbriggs/extralibs/blacsC.a /ccs/home/elbriggs/extralibs/blacs.a
COBJECTS = $(CFILES:.c=.o)
FOBJECTS = $(FFILES:.f=.o)
OBJECTS = $(COBJECTS) $(FOBJECTS) $(LOBJECTS)


LIBS = -L /apps/FFTW/prod/jaguar/lib -L /opt/fftw/2.1.5.2/lib/ -ldfftw -L ../lib/libxc/lib -lxc -lm -lcublas -lcuda

LDFLAGS = -pthread -openmp
#LDFLAGS = -pthread


CC = cc
FC = gfortran


# Makefiles: if these change, whole code should be recompiled
MFILES = Makefile Make.xk-gnu


# Compile flags
ARCH =
# Other useful flags: -fastsse should give speed improvemnts, but causes weird behavior
# Other flags: debug, I think: -g -gopt -Mbounds -Mchkfpstk -Mchkstk -Mcoff -Mdwarf1 -Mdwarf2 -Mdwarf3 -Melf
FFLAGS = $(ARCH) -O3 -fopenmp
#FFLAGS = $(ARCH) -O3
CFLAGS = $(ARCH) -O3 $(CWARN) -D_REENTRANT $(DEFS) -IHeaders -pthread -Wall -fopenmp -ffast-math -mfpmath=sse -msse4.2 -mavx -mfma4 -mxop
#CFLAGS = $(ARCH) -O3 $(CWARN) -D_REENTRANT $(DEFS) -IHeaders -pthread -Wall -ffast-math -mfpmath=sse -msse4.2 -mavx -mfma4 -mxop

rmg: Headers/svnrev.h $(COBJECTS) $(FOBJECTS) ../lib/libxc/lib/libxc.a
	$(CC) $(CFLAGS) $(OBJECTS) $(LIBS) $(LDFLAGS) -o $@

$(COBJECTS): %.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

$(FOBJECTS): %.o: %.f
	$(CF) $(FFLAGS) -c $< -o $@



# Runs svnrev to create svnrev.h
Headers/svnrev.h: SvnRev/svnrev $(CFILES) $(FFILES) $(HFILES) $(MFILES)
	SvnRev/svnrev $(CFILES) $(FFILES) $(HFILES) $(MFILES)


# Compiles to get svnrev binary
SvnRev/svnrev: SvnRev/svnrev.c $(MFILES)
	gcc $< -o $@
	rm -f svnrev.o


#dependencies
$(OBJECTS): $(HFILES) $(MFILES)


#write_header needs to be recompiled everytime svnrev.h changes
Common/write_header.o: Headers/svnrev.h

target_link_libraries( ${rmg-tddft} RmgTddft)
target_link_libraries (${rmg-tddft} Eldyn)
if(USE_NUMA_INTERNAL)
target_link_libraries(${rmg-tddft} ${NUMA_LIBRARIES})
endif(USE_NUMA_INTERNAL)
if(USE_LIBXC)
add_dependencies(${rmg-tddft} libxc)
target_link_libraries(${rmg-tddft} ${LIBXC_LIBRARIES})
endif(USE_LIBXC)
target_link_libraries( ${rmg-tddft} symspg_static)
# static libraries are created for the object files in each subdir. Duplicates
# are needed to handle circular references
target_link_libraries( ${rmg-tddft} RmgLib zfp)
if(USE_NUMA_INTERNAL)
target_link_libraries( ${rmg-tddft} RMG_Common ${NUMA_LIBRARIES} zfp)
endif(USE_NUMA_INTERNAL)
target_link_libraries( ${rmg-tddft} InternalPseudo)
target_link_libraries( ${rmg-tddft} Finite_diff RMG_Common RmgLib ${ZLIB} ${FFTW_LIBRARIES})
target_link_libraries( ${rmg-tddft} Misc RMG_Common Finite_diff)
target_link_libraries( ${rmg-tddft} RMG_Common Force)
target_link_libraries( ${rmg-tddft} Force RMG_Common)
target_link_libraries( ${rmg-tddft} Input InternalPseudo)
target_link_libraries( ${rmg-tddft} MG RMG_Common RmgLib)
target_link_libraries( ${rmg-tddft} RMG_Common RmgLib MG)
target_link_libraries( ${rmg-tddft} Finite_diff Misc)
target_link_libraries( ${rmg-tddft} Misc Finite_diff)
target_link_libraries( ${rmg-tddft} Input)
if(USE_LIBXC)
target_link_libraries( ${rmg-tddft} XC_useLIBXC ${LIBXC_LIBRARIES} ${LIBXC_LIBRARIES_F90})
target_link_libraries( ${rmg-tddft} XC_useLIBXC ${LIBXC_LIBRARIES_F90} ${LIBXC_LIBRARIES})
target_link_libraries( ${rmg-tddft} XC_useLIBXC Misc)
target_link_libraries( ${rmg-tddft} XC_useLIBXC Finite_diff)
target_link_libraries( ${rmg-tddft} XC_useLIBXC RmgLib)
target_link_libraries( ${rmg-tddft} XC_useLIBXC RMG_Spin)
else(USE_LIBXC)
target_link_libraries( ${rmg-tddft} XC Misc)
target_link_libraries( ${rmg-tddft} XC Finite_diff)
target_link_libraries( ${rmg-tddft} XC RmgLib)
target_link_libraries( ${rmg-tddft} XC RMG_Spin)
endif(USE_LIBXC)
target_link_libraries( ${rmg-tddft} RMG_Spin)
target_link_libraries( ${rmg-tddft} US_PP Input)
target_link_libraries( ${rmg-tddft} RMG_Common US_PP)
target_link_libraries( ${rmg-tddft} US_PP RMG_Common)
target_link_libraries( ${rmg-tddft} Force)
target_link_libraries( ${rmg-tddft} Force US_PP)
target_link_libraries( ${rmg-tddft} US_PP Force)
target_link_libraries( ${rmg-tddft} RMG_Subdiag Finite_diff RMG_Common ${MAGMA_LIBRARIES})
target_link_libraries( ${rmg-tddft} RMG_Subdiag Misc)
target_link_libraries( ${rmg-tddft} ${PFFT_LIBRARIES} ${FFTW_LIBRARIES} ${FFTW_MPI_LIBRARIES})
if(USE_PLPLOT_LIBS)
    target_link_libraries( ${rmg-tddft} ${PLplot_cxx_LIBRARY} ${PLplot_LIBRARY} )
    target_link_libraries( ${rmg-tddft} Misc ${PLplot_LIBRARY})
endif(USE_PLPLOT_LIBS)
if(CRAY_XK)
    target_link_libraries( ${rmg-tddft} ${BZ2_LIBRARIES})
endif(CRAY_XK)
target_link_libraries( ${rmg-tddft} ${Boost_LIBRARIES})
if(USE_OPENBABEL_LIBS)
    target_link_libraries( ${rmg-tddft} ${OPENBABEL_LIBRARIES})
endif(USE_OPENBABEL_LIBS)
if(NOT CRAY_XK)
    target_link_libraries( ${rmg-tddft} scalapack)
endif(NOT CRAY_XK)

